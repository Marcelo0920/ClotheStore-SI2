import React, { useState, useEffect } from "react";
import Header from "../components/Header/Header";
import Breadcrumbs from "../components/ShoppingCart/BreadCrumbs";
import Footer from "../components/Footer";
import ShopServices from "../components/ads/ShopServices";
import AlmacenList from "../components/Almacenes/AlmacenList";
import AlmacenCreateModal from "../components/Almacenes/Modals/AlmacenCreateModal";
import AlmacenEditModal from "../components/Almacenes/Modals/AlmacenEditModal";
import AlmacenDeleteModal from "../components/Almacenes/Modals/AlmacenDeleteModal";

const AlmacenesEditListPage = () => {
  const [almacenes, setAlmacenes] = useState([]);
  const [sucursales, setSucursales] = useState([]);
  const [showCreateModal, setShowCreateModal] = useState(false);
  const [showEditModal, setShowEditModal] = useState(false);
  const [showDeleteModal, setShowDeleteModal] = useState(false);
  const [currentAlmacen, setCurrentAlmacen] = useState(null);

  useEffect(() => {
    // Fetch almacenes and sucursales from your API here
    // For now, we'll use mock data
    setAlmacenes([
      {
        id: 1,
        numero: 12,
        tipo: "Producto22",
        descripcion: "Descripción del producto o servicio",
        id_sucursal: {
          id: 1,
          nombre: "equipetrol",
          direccion: "barrio equipetrols",
        },
      },
    ]);
    setSucursales([
      { id: 1, nombre: "equipetrol", direccion: "barrio equipetrols" },
      { id: 2, nombre: "centro", direccion: "calle 24 de septiembre" },
    ]);
  }, []);

  const handleShowCreateModal = () => setShowCreateModal(true);
  const handleCloseCreateModal = () => setShowCreateModal(false);

  const handleShowEditModal = (almacen) => {
    setCurrentAlmacen(almacen);
    setShowEditModal(true);
  };
  const handleCloseEditModal = () => {
    setShowEditModal(false);
    setCurrentAlmacen(null);
  };

  const handleShowDeleteModal = (almacen) => {
    setCurrentAlmacen(almacen);
    setShowDeleteModal(true);
  };
  const handleCloseDeleteModal = () => {
    setShowDeleteModal(false);
    setCurrentAlmacen(null);
  };

  const handleSaveAlmacen = (almacenData) => {
    // Here you would typically send a POST or PUT request to your API
    if (almacenData.id) {
      setAlmacenes(
        almacenes.map((a) =>
          a.id === almacenData.id
            ? {
                ...a,
                ...almacenData,
                id_sucursal: sucursales.find(
                  (s) => s.id === almacenData.id_sucursal
                ),
              }
            : a
        )
      );
    } else {
      const newAlmacen = {
        id: Date.now(), // This should be generated by the backend in a real scenario
        ...almacenData,
        id_sucursal: sucursales.find((s) => s.id === almacenData.id_sucursal),
      };
      setAlmacenes([...almacenes, newAlmacen]);
    }
    handleCloseCreateModal();
    handleCloseEditModal();
  };

  const handleDeleteAlmacen = () => {
    // Here you would typically send a DELETE request to your API
    setAlmacenes(almacenes.filter((a) => a.id !== currentAlmacen.id));
    handleCloseDeleteModal();
  };

  return (
    <>
      <Header />
      <Breadcrumbs current="Lista de Almacenes" />
      <div
        className="container"
        style={{ marginTop: "50px", textAlign: "right" }}
      >
        <button
          onClick={handleShowCreateModal}
          className="btn"
          style={{ backgroundColor: "green", color: "white" }}
        >
          Crear Almacén
        </button>
      </div>
      <AlmacenList
        almacenes={almacenes}
        onEdit={handleShowEditModal}
        onDelete={handleShowDeleteModal}
      />
      <ShopServices />
      <div style={{ margin: "150px 0px" }}></div>
      <Footer />

      <AlmacenCreateModal
        open={showCreateModal}
        onClose={handleCloseCreateModal}
        onSave={handleSaveAlmacen}
        sucursales={sucursales}
      />
      <AlmacenEditModal
        open={showEditModal}
        onClose={handleCloseEditModal}
        onSave={handleSaveAlmacen}
        almacen={currentAlmacen}
        sucursales={sucursales}
      />
      <AlmacenDeleteModal
        open={showDeleteModal}
        onClose={handleCloseDeleteModal}
        onConfirm={handleDeleteAlmacen}
        almacenNumero={currentAlmacen?.numero}
      />
    </>
  );
};

export default AlmacenesEditListPage;
